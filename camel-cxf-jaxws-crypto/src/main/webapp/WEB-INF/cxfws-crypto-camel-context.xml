<!--
  #%L
  Wildfly Camel :: Example :: Camel CXF JAX-WS
  %%
  Copyright (C) 2013 - 2016 RedHat
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- If available, we use jboss.bind.address instead of localhost -->
    <cxf:cxfEndpoint id="cxfConsumer"
                     address="http://{{sys:jboss.bind.address:localhost}}:8080/webservices/greeting"
                     serviceClass="org.wildfly.camel.examples.cxf.jaxws.GreetingService"
                     loggingFeatureEnabled="true" />

    <!-- If available, we use jboss.bind.address instead of localhost -->
    <cxf:cxfEndpoint id="cxfProducer"
                     address="http://{{sys:jboss.bind.address:localhost}}:8080/webservices/greeting"
                     serviceClass="org.wildfly.camel.examples.cxf.jaxws.GreetingService"
                     loggingFeatureEnabled="true"/>

    <bean id="greetingsProcessor" class="org.wildfly.camel.examples.cxf.jaxws.GreetingsProcessor" />

    <camelContext id="cxfws-crypto-camel-context" xmlns="http://camel.apache.org/schema/spring">
        <!--
         This route defines a CXF producer endpoint which invokes a greeting web service.

         CamelCxfWsServlet sends the required message and name parameters to the service by populating them
         within the message exchange body.
        -->
        <route id="directToCxfBeanRoute">
            <from id="directConsumer" uri="direct:start" />
            <log id="logDirectInput" message="Received direct message: ${headers} ${body}" loggingLevel="INFO"/>
            <log id="logEncrypting"
                 message="Encrypting the message payload with PGP before sending CXF Consumer..."
                 loggingLevel="INFO"/>
            <to id="cxfwsProducer" uri="cxf:bean:cxfProducer" />
        </route>

        <!--
        This route defines a CXF consumer endpoint which handles requests made to the greeting web service.

        GreetingsProcessor constructs a String greeting response to return back to the JAX-WS client.
        -->
        <route id="cxfConsumerToProcessorRoute">
            <from id="cxfConsumer" uri="cxf:bean:cxfConsumer" />
            <log id="logCxfInput" message="Received CXF Bean message: ${headers} ${body}" loggingLevel="INFO"/>
            <log id="logDecrypting"
                 message="Verifying the message payload PGP signature before processing..."
                 loggingLevel="INFO"/>
            <process id="processor" ref="greetingsProcessor" />
        </route>
    </camelContext>

</beans>
